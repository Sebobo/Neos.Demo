##
# "Carousel" element
#
prototype(Neos.Demo:Content.Carousel) < prototype(Neos.Neos:ContentComponent) {

    identifier = ${q(node).property('_identifier')}

    carouselItems = Neos.Neos:ContentCollection {
        nodePath = 'carouselItems'
        content.iterationName = 'carouselItemsIteration'
        attributes.class = 'carousel-inner'
    }

    carouselItemNumber = ${q(node).children('carouselItems').children('[instanceof Neos.NodeTypes:Image]').count()}

    renderer = afx`
        <div>
            <div class="carousel slide" id={props.identifier}>

                <ol class="carousel-indicators">
                    <Neos.Fusion:Loop items={Array.range(1, props.carouselItemNumber)} itemName="index" iterationName="iterator" @children="itemRenderer" >
                        <li
                            data-target={'#' + props.identifier}
                            data-slide-to={iterator.index}
                            class={iterator.isFirst ? 'active' : ''}
                        ></li>
                    </Neos.Fusion:Loop>
                </ol>

                {props.carouselItems}

                <a class="left carousel-control" href={'#' + props.identifier} data-slide="prev">
                    <span class="icon-prev"></span>
                </a>
                <a class="right carousel-control" href={'#' + props.identifier} data-slide="next">
                    <span class="icon-next"></span>
                </a>
            </div>
        </div>
    `

// @todo: Check what this actually does and wether we still need it
//
//	// Enhance image prototype for the carousel
//	prototype(Neos.NodeTypes:Image) {
//		// Render images in the carousel with a special template.
//		templatePath = 'resource://Neos.Demo/Private/Templates/FusionObjects/CarouselItem.html'
//
//		attributes.class = ${'item' + (carouselItemsIteration.isFirst ? ' active' : '')}
//
//		// We want to use the item iterator in the template so we have to store it in ts.
//		iteration = ${carouselItemsIteration}
//	}
}
