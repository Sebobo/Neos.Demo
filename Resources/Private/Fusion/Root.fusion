include: NodeTypes/*

/**
 * Root Fusion template for the Neos demo website
 */
prototype(Neos.NodeTypes:Page) < prototype(Neos.Neos:Page) {
	head {
		stylesheets {
			site = Neos.Fusion:Template {
				templatePath = 'resource://Neos.Demo/Private/Templates/Page/Default.html'
				sectionName = 'stylesheets'
				node = ${node}
			}
		}

		metadata = Neos.Fusion:Template {
			templatePath = 'resource://Neos.Demo/Private/Templates/Page/Default.html'
			sectionName = 'metadata'
		}
	}

	// This query checks if the second level menu has items and sets an additional class for the body
	bodyTag.attributes.class = ${q(node).parents().count() >= 1 && q(node).children('[instanceof Neos.Neos:Document]').filter('[_hiddenInIndex=false]').count() > 0 ? 'has-subpages' : ''}

	body {
		templatePath = 'resource://Neos.Demo/Private/Templates/Page/Default.html'
		sectionName = 'body'
		imageUri = Neos.Neos:ImageUri {
			asset = ${q(node).property('image')}
			maximumWidth = 2560
			maximumHeight = 1280
			@if.image = ${q(node).property('image')}
		}
		imageTitleText = ${q(node).property('imageTitleText')}

		parts {
			mainMenu = Neos.Neos:Menu {
				templatePath = 'resource://Neos.Demo/Private/Templates/FusionObjects/MainMenu.html'
			}

			secondLevelMenu = Neos.Neos:Menu {
				entryLevel = 2
				templatePath = 'resource://Neos.Demo/Private/Templates/FusionObjects/SecondLevelMenu.html'
				maximumLevels = 1
			}

			metaMenu = Neos.Neos:Menu {
				entryLevel = 2
				templatePath = 'resource://Neos.Demo/Private/Templates/FusionObjects/MetaMenu.html'
				maximumLevels = 1
				startingPoint = ${q(site).children('metamenu').get(0)}
			}

			breadcrumb = Neos.Neos:BreadcrumbMenu

			languageMenu = Neos.Neos:DimensionMenu {
				dimension = 'language'
				templatePath = 'resource://Neos.Demo/Private/Templates/FusionObjects/LanguageMenu.html'
			}
		}

		content {
			teaser = Neos.Neos:ContentCollection {
				nodePath = 'teaser'
			}

			// Default content section
			main = Neos.Neos:PrimaryContent {
				nodePath = 'main'
			}
		}

		// A shared footer which can be edited from all pages
		footer = Neos.Neos:ContentCollection {
			nodePath = ${q(site).children('footer').property('_path')}
			collection = ${q(site).children('footer').children()}
		}

		javascripts.site = Neos.Fusion:Template {
			templatePath = 'resource://Neos.Demo/Private/Templates/Page/Default.html'
			sectionName = 'bodyScripts'
		}
	}
}

page = Neos.NodeTypes:Page

default < page

// Special page layout with less navigation components
landingPage < page
landingPage.body {
	// Hide breadcrumb on landing pages
	parts.breadcrumb >
	landingPage = ${true}
}

// Special layout for chapter nodes
chapter < page
chapter {
	bodyTag.attributes.class = 'chapter'
	body {
		templatePath = 'resource://Neos.Demo/Private/Templates/Page/Chapter.html'
		title = ${q(node).property('title')}
		title.@process.convertUris = Neos.Neos:ConvertUris

		// Get the previous chapter by traversing to the node which preceds the current one.
		// We need to specify the nodetype because there could be other node types like content collections on the same level.
		previousChapter = ${q(documentNode).prev('[instanceof Neos.Neos:Document]').get(0)}
		nextChapter = ${q(documentNode).next('[instanceof Neos.Neos:Document]').get(0)}
	}
}

print < page
print {
	head {
		stylesheets.printCss = Neos.Fusion:Tag {
			@position = 'end 10'
			tagName = 'link'
			attributes {
				media = 'all'
				rel = 'stylesheet'
				href = Neos.Fusion:ResourceUri {
					path = 'resource://Neos.Demo/Public/Styles/Print.css'
				}
			}
		}
	}
}
